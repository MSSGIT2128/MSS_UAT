package com.oracle.xmlns.apps.financials.receivables.receipts.shared.standardreceiptservice.commonservice;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.1
 * 2023-01-31T18:30:49.017+11:00
 * Generated source version: 3.3.1
 *
 */
@WebServiceClient(name = "StandardReceiptService",
                  wsdlLocation = "StandardReceiptService.wsdl",
                  targetNamespace = "http://xmlns.oracle.com/apps/financials/receivables/receipts/shared/standardReceiptService/commonService/")
public class StandardReceiptService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://xmlns.oracle.com/apps/financials/receivables/receipts/shared/standardReceiptService/commonService/", "StandardReceiptService");
    public final static QName StandardReceiptServiceSoapHttpPort = new QName("http://xmlns.oracle.com/apps/financials/receivables/receipts/shared/standardReceiptService/commonService/", "StandardReceiptServiceSoapHttpPort");
    static {
        URL url = StandardReceiptService_Service.class.getResource("StandardReceiptService.wsdl");
        if (url == null) {
            url = StandardReceiptService_Service.class.getClassLoader().getResource("StandardReceiptService.wsdl");
        }
        if (url == null) {
            java.util.logging.Logger.getLogger(StandardReceiptService_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "StandardReceiptService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StandardReceiptService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public StandardReceiptService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StandardReceiptService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public StandardReceiptService_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public StandardReceiptService_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public StandardReceiptService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns StandardReceiptService
     */
    @WebEndpoint(name = "StandardReceiptServiceSoapHttpPort")
    public StandardReceiptService getStandardReceiptServiceSoapHttpPort() {
        return super.getPort(StandardReceiptServiceSoapHttpPort, StandardReceiptService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StandardReceiptService
     */
    @WebEndpoint(name = "StandardReceiptServiceSoapHttpPort")
    public StandardReceiptService getStandardReceiptServiceSoapHttpPort(WebServiceFeature... features) {
        return super.getPort(StandardReceiptServiceSoapHttpPort, StandardReceiptService.class, features);
    }

}
